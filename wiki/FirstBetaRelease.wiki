#summary First Beta anoncment and Product Backlog
#labels Phase-Design

= Intro =
This v0.0.1 version is released.

= Poc =

In the early start, we'd like to show a real example of how this could work.
So we have two projects: gwt-mvc and gwt-mvc-poc (Proof Of Concept).
You could checkout the result here:
[http://gwt-mvc.googlecode.com/svn/branches/poc/gwt-mvc-poc/demo/GwtMvcPoc.html]
(This demo dont need a server to run).

= gwt mvc =

The main advantages i would like to expose are:
 * The controllers are testables.
 * A controler defines its action by an enum.
 * I recommand to call the action with a prefix SHOW_ , DO_ or GET_, but it is not required.
 * The model updates the views listening him in respect of the asynchronous call.
 * As a view is only a composite (container), it could be a unique componant, or multiple componant(a form for example)

= Project Roadmap =

We have some ideas of what is possible to do, but the users will choose what they need.
Please start a topic on the google group for new features, or start an issue on this site.

|| Description || Status || Version ||
|| create initial project || Done || 0.1 ||
|| create poc project || Done || 0.1 ||
|| define simple example poc || Done || 0.1 ||
|| add complexity to poc (many views) || Done || 0.1 ||
|| add complexity to poc (many rpcs) || Done || 0.1 ||
|| add complexity to poc (many models) || Done || 0.1 ||
|| add complexity to poc (menu and hierachical controller) || Done || 0.1 ||
|| manage history and urls || Done || 0.1 ||
|| enhance controller testability || Done || 0.1 ||
|| enable block user for loading (optionnal on each action) || Done || 0.1 ||
|| add the sender to events || TODO|| 0.2 ||
|| add standard 404 page when historyToken is unknown || TODO|| 0.2 ||
|| add normalized url arguments || TODO|| 0.2 ||
|| manage simple form validation || TODO|| 0.2 ||
|| base the view on a lazy Panel instead of Composite || TODO|| 0.2 ||
|| enable decorator pattern to structure multi-view screens|| TODO|| ? ||
